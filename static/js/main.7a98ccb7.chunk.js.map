{"version":3,"sources":["Health.jsx","More.jsx","Button.jsx","Recipe.jsx","logo.png","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Health","healthLabels","map","health","More","calories","cuisineType","dishType","dietLabels","mealType","useState","setHealth","className","style","yellow","onClick","Button","more","setMore","button","Recipe","title","image","ingredients","recipe","ingredient","text","src","alt","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","logo","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7a98ccb7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Health = ({healthLabels}) => {\r\n    return(\r\n          <div>\r\n              <ul>\r\n                  {healthLabels.map(health =>\r\n                    <li>{health}</li>)}\r\n              </ul>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default Health;","import React, {useState} from 'react';\r\nimport Health from './Health';\r\nimport style from './recipe.module.css';\r\n\r\nconst More = ({calories, cuisineType, dishType, dietLabels, mealType, healthLabels}) => {\r\n    const [health, setHealth] = useState(false);\r\n\r\n    const klick = () => {\r\n        setHealth(!health);\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <p>Cuisine Type: <span>{cuisineType}</span></p>\r\n            <p>Meal Type: <span>{mealType}</span></p>\r\n            <p>Dish Type: <span>{dishType}</span></p>\r\n            <p>Diet: <span>{dietLabels}</span></p>\r\n            <p>Calories: <span>{calories}</span></p>\r\n            <button className={style.yellow} onClick={klick}>Health</button>\r\n            {health ? <Health \r\n                    healthLabels={healthLabels}\r\n            /> : null}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default More;","import React, {useState} from 'react';\r\nimport More from './More';\r\nimport style from './recipe.module.css';\r\n\r\nconst Button = ({calories, cuisineType, dishType, dietLabels, mealType, healthLabels}) =>{\r\n    const[more, setMore] = useState(false);\r\n\r\n    const klick = () => {\r\n        setMore(!more);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button className={style.button} onClick={klick}>Show more</button>\r\n            {more ? <More \r\n                calories={calories}\r\n                cuisineType={cuisineType}\r\n                dishType={dishType}\r\n                dietLabels={dietLabels}\r\n                mealType={mealType}\r\n                healthLabels={healthLabels}\r\n            /> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;","import Button from './Button';\r\nimport style from './recipe.module.css';\r\n\r\n\r\nconst Recipe = ({title, calories, image, ingredients, cuisineType, dishType, dietLabels, mealType, healthLabels}) => {\r\n    \r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map(ingredient =>\r\n                    <li>{ingredient.text}</li>\r\n                    )}\r\n            </ol>\r\n            <img className={style.image} src={image} alt=\"image\"/>    \r\n            <Button \r\n            calories={calories}\r\n            cuisineType={cuisineType}\r\n            dishType={dishType}\r\n            dietLabels={dietLabels}\r\n            mealType={mealType}\r\n            healthLabels={healthLabels}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","export default __webpack_public_path__ + \"static/media/logo.c980d85a.png\";","import React, {useEffect, useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\nimport logo from './logo.png';\n\nconst App = () =>{\n  const APP_ID = \"d9a02134\";\n  const APP_KEY = \"4cc4fcc66c79c30154038941348fd560\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState('chicken');\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault(); //stop page refres\n    setQuery(search);\n    setSearch('');\n  }\n\n  return(\n    <div className=\"App\">\n      <h1>Recipes</h1>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Look for the recipe\"/>\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <h3>Enter the required recipe or any type of food or drink.</h3>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <div className=\"recipes\">\n      {recipes.map(recipe =>(\n        <Recipe \n          key={recipe.recipe.label}\n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories}\n          image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}\n          cuisineType={recipe.recipe.cuisineType}\n          dishType={recipe.recipe.dishType}\n          dietLabels={recipe.recipe.dietLabels}\n          mealType={recipe.recipe.mealType}\n          healthLabels={recipe.recipe.healthLabels}\n        />\n      ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__20-cH\",\"button\":\"recipe_button__2kQJF\",\"yellow\":\"recipe_yellow__TY6q6\",\"image\":\"recipe_image__3QvCu\"};"],"sourceRoot":""}